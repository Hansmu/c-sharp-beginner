C# vs .NET
C# is a programming language. .NET is a framework for building applications on Windows.
In Java the language isn't instantly translated into machine code, but it's translated into byte code. The same thing in C#.
C# code is compiled into IL code (intermediate language). It's independent of the computer it's running.
Then we need something to translate it into the Native Code. This is what CLR is for (common language runtime). It's an application that's sitting in the memory, it translates the IL to machine code. 
It's called just in time compilation (JIT).
As long as a machine has CLR, that can run your application.

C# has namespaces to contain classes. Assembly is used to contain namespaces. Assembly is DLL or EXE. When you compile an application, then one or more assemblies are built.

Under properties we have AssemblyInfo.cs. It shows what assembly will be produced as a result of compiling this application. An executable is an assembly.
Under References you see any assembly this project is referecing to do its job.
App.config contains configuration info for the application. Can contain database connection strings for example or just regular settings.

For local variables use Camel Case.
For constants use Pascal Case.

C# doesn't have automatic overflow checking. Once it goes over, you reach 0. Use the checked keyword to check overflow. checked {  }. An exception will be thrown instead of overflowing.
It's not really something that is used. You'd just use a higher capacity variable.

Implicit type conversion can happen just by using = if the one on the right is a smaller size variable.
Otherwise have to use explicit type conversion - use casting int i = (int) f;
For string to number can use Convert or the specific variable.
Convert.ToInt32(s); int.Parse(s);